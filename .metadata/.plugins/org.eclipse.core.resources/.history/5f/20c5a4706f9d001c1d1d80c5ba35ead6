package main;


import java.util.HashMap;
import java.util.Map;

import main.metamodel.*;

public class StateMachine {
	
	
	private State initial; 
	private Map<String,State> states = new HashMap<>(); 
	private State current;
	private String currentEvent;
	private boolean ifEquals;
	private boolean ifGreaterThan;
	private boolean ifLessThan;
	
	
	
	private State getState(String name) {
		if(!states.containsKey(name)) states.put(name, new State(name));
		return states.get(name);
	}
		
	
	public Machine build() { 
		return new Machine(states.values(), initial); 
	}

	public StateMachine state(String string) {
		current = getState(string);
		return this;
	}

	public StateMachine initial() {
		initial = current;
		return this;
	}
	
	private void checkStateExists(String string) {
		if (!states.containsKey(string)) {
			states.put(string, new State(string));
		}
	}


	public StateMachine when(String string) {
		currentEvent = string;
		return null;
	}

	public StateMachine to(String s) {
		checkStateExists(s);
		Transition t = new Transition(currentEvent,getState(s));
		current.addTransition(t);
		
		return this;
	}

	public StateMachine integer(String string) {
		// TODO Auto-generated method stub
		return null;
	}

	public StateMachine set(String string, int i) {
		// TODO Auto-generated method stub
		return null;
	}

	public StateMachine increment(String string) {
		// TODO Auto-generated method stub
		return null;
	}

	public StateMachine decrement(String string) {
		// TODO Auto-generated method stub
		return null;
	}

	
	public StateMachine ifEquals(String string, int i) {
		// TODO Auto-generated method stub
		return null;
	}

	public StateMachine ifGreaterThan(String string, int i) {
		// TODO Auto-generated method stub
		return null;
	}

	public StateMachine ifLessThan(String string, int i) {
		// TODO Auto-generated method stub
		return null;
	}

}
